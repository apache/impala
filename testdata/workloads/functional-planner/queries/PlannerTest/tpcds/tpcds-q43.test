# TPCDS-Q43
select
  s_store_name,
  s_store_id,
  sum(case when (d_day_name = 'Sunday') then ss_sales_price else null end) sun_sales,
  sum(case when (d_day_name = 'Monday') then ss_sales_price else null end) mon_sales,
  sum(case when (d_day_name = 'Tuesday') then ss_sales_price else null end) tue_sales,
  sum(case when (d_day_name = 'Wednesday') then ss_sales_price else null end) wed_sales,
  sum(case when (d_day_name = 'Thursday') then ss_sales_price else null end) thu_sales,
  sum(case when (d_day_name = 'Friday') then ss_sales_price else null end) fri_sales,
  sum(case when (d_day_name = 'Saturday') then ss_sales_price else null end) sat_sales
from
  date_dim,
  store_sales,
  store
where
  d_date_sk = ss_sold_date_sk
  and s_store_sk = ss_store_sk
  and s_gmt_offset = -5
  and d_year = 1998
group by
  s_store_name,
  s_store_id
order by
  s_store_name,
  s_store_id,
  sun_sales,
  mon_sales,
  tue_sales,
  wed_sales,
  thu_sales,
  fri_sales,
  sat_sales
limit 100
---- PLAN
Max Per-Host Resource Reservation: Memory=8.31MB Threads=4
Per-Host Resource Estimates: Memory=150MB
F00:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
|  Per-Host Resources: mem-estimate=149.88MB mem-reservation=8.31MB thread-reservation=4 runtime-filters-memory=2.00MB
PLAN-ROOT SINK
|  output exprs: s_store_name, s_store_id, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|
06:TOP-N [LIMIT=100]
|  order by: s_store_name ASC, s_store_id ASC, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) ASC
|  mem-estimate=7.32KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=156B cardinality=48
|  in pipelines: 06(GETNEXT), 05(OPEN)
|
05:AGGREGATE [FINALIZE]
|  output: sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  group by: s_store_name, s_store_id
|  mem-estimate=10.00MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=48
|  in pipelines: 05(GETNEXT), 01(OPEN)
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: ss_store_sk = s_store_sk
|  fk/pk conjuncts: ss_store_sk = s_store_sk
|  runtime filters: RF000[bloom] <- s_store_sk, RF001[min_max] <- s_store_sk
|  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0,2 row-size=91B cardinality=589.03K
|  in pipelines: 01(GETNEXT), 02(OPEN)
|
|--02:SCAN HDFS [tpcds_parquet.store]
|     HDFS partitions=1/1 files=1 size=9.93KB
|     predicates: s_gmt_offset = CAST(-5 AS DECIMAL(3,0))
|     stored statistics:
|       table: rows=12 size=9.93KB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=12
|     parquet statistics predicates: s_gmt_offset = CAST(-5 AS DECIMAL(3,0))
|     parquet dictionary predicates: s_gmt_offset = CAST(-5 AS DECIMAL(3,0))
|     mem-estimate=64.00MB mem-reservation=32.00KB thread-reservation=1
|     tuple-ids=2 row-size=52B cardinality=12
|     in pipelines: 02(GETNEXT)
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: ss_sold_date_sk = d_date_sk
|  fk/pk conjuncts: ss_sold_date_sk = d_date_sk
|  runtime filters: RF002[bloom] <- d_date_sk
|  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0 row-size=39B cardinality=589.03K
|  in pipelines: 01(GETNEXT), 00(OPEN)
|
|--00:SCAN HDFS [tpcds_parquet.date_dim]
|     HDFS partitions=1/1 files=1 size=2.15MB
|     predicates: d_year = CAST(1998 AS INT)
|     stored statistics:
|       table: rows=73.05K size=2.15MB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=73.05K
|     parquet statistics predicates: d_year = CAST(1998 AS INT)
|     parquet dictionary predicates: d_year = CAST(1998 AS INT)
|     mem-estimate=48.00MB mem-reservation=512.00KB thread-reservation=1
|     tuple-ids=0 row-size=27B cardinality=373
|     in pipelines: 00(GETNEXT)
|
01:SCAN HDFS [tpcds_parquet.store_sales]
   HDFS partitions=1824/1824 files=1824 size=200.96MB
   runtime filters: RF001[min_max] -> ss_store_sk, RF000[bloom] -> ss_store_sk, RF002[bloom] -> ss_sold_date_sk
   stored statistics:
     table: rows=2.88M size=200.96MB
     partitions: 1824/1824 rows=2.88M
     columns: all
   extrapolated-rows=disabled max-scan-range-rows=130.09K
   mem-estimate=32.00MB mem-reservation=512.00KB thread-reservation=1
   tuple-ids=1 row-size=12B cardinality=2.88M
   in pipelines: 01(GETNEXT)
---- DISTRIBUTEDPLAN
Max Per-Host Resource Reservation: Memory=14.84MB Threads=8
Per-Host Resource Estimates: Memory=174MB
F04:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
|  Per-Host Resources: mem-estimate=4.02MB mem-reservation=4.00MB thread-reservation=1
PLAN-ROOT SINK
|  output exprs: s_store_name, s_store_id, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|
11:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: s_store_name ASC, s_store_id ASC, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) ASC
|  limit: 100
|  mem-estimate=24.98KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=156B cardinality=48
|  in pipelines: 06(GETNEXT)
|
F03:PLAN FRAGMENT [HASH(s_store_name,s_store_id)] hosts=3 instances=3
Per-Host Resources: mem-estimate=10.02MB mem-reservation=1.94MB thread-reservation=1
06:TOP-N [LIMIT=100]
|  order by: s_store_name ASC, s_store_id ASC, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) ASC
|  mem-estimate=7.32KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=156B cardinality=48
|  in pipelines: 06(GETNEXT), 10(OPEN)
|
10:AGGREGATE [FINALIZE]
|  output: sum:merge(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  group by: s_store_name, s_store_id
|  mem-estimate=10.00MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=48
|  in pipelines: 10(GETNEXT), 01(OPEN)
|
09:EXCHANGE [HASH(s_store_name,s_store_id)]
|  mem-estimate=24.98KB mem-reservation=0B thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=48
|  in pipelines: 01(GETNEXT)
|
F00:PLAN FRAGMENT [RANDOM] hosts=3 instances=3
Per-Host Resources: mem-estimate=47.91MB mem-reservation=8.38MB thread-reservation=2 runtime-filters-memory=2.00MB
05:AGGREGATE [STREAMING]
|  output: sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  group by: s_store_name, s_store_id
|  mem-estimate=10.00MB mem-reservation=2.00MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=48
|  in pipelines: 01(GETNEXT)
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: ss_store_sk = s_store_sk
|  fk/pk conjuncts: ss_store_sk = s_store_sk
|  runtime filters: RF000[bloom] <- s_store_sk, RF001[min_max] <- s_store_sk
|  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0,2 row-size=91B cardinality=589.03K
|  in pipelines: 01(GETNEXT), 02(OPEN)
|
|--08:EXCHANGE [BROADCAST]
|  |  mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
|  |  tuple-ids=2 row-size=52B cardinality=12
|  |  in pipelines: 02(GETNEXT)
|  |
|  F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
|  Per-Host Resources: mem-estimate=64.00MB mem-reservation=32.00KB thread-reservation=2
|  02:SCAN HDFS [tpcds_parquet.store, RANDOM]
|     HDFS partitions=1/1 files=1 size=9.93KB
|     predicates: s_gmt_offset = CAST(-5 AS DECIMAL(3,0))
|     stored statistics:
|       table: rows=12 size=9.93KB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=12
|     parquet statistics predicates: s_gmt_offset = CAST(-5 AS DECIMAL(3,0))
|     parquet dictionary predicates: s_gmt_offset = CAST(-5 AS DECIMAL(3,0))
|     mem-estimate=64.00MB mem-reservation=32.00KB thread-reservation=1
|     tuple-ids=2 row-size=52B cardinality=12
|     in pipelines: 02(GETNEXT)
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: ss_sold_date_sk = d_date_sk
|  fk/pk conjuncts: ss_sold_date_sk = d_date_sk
|  runtime filters: RF002[bloom] <- d_date_sk
|  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0 row-size=39B cardinality=589.03K
|  in pipelines: 01(GETNEXT), 00(OPEN)
|
|--07:EXCHANGE [BROADCAST]
|  |  mem-estimate=21.23KB mem-reservation=0B thread-reservation=0
|  |  tuple-ids=0 row-size=27B cardinality=373
|  |  in pipelines: 00(GETNEXT)
|  |
|  F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
|  Per-Host Resources: mem-estimate=48.00MB mem-reservation=512.00KB thread-reservation=2
|  00:SCAN HDFS [tpcds_parquet.date_dim, RANDOM]
|     HDFS partitions=1/1 files=1 size=2.15MB
|     predicates: d_year = CAST(1998 AS INT)
|     stored statistics:
|       table: rows=73.05K size=2.15MB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=73.05K
|     parquet statistics predicates: d_year = CAST(1998 AS INT)
|     parquet dictionary predicates: d_year = CAST(1998 AS INT)
|     mem-estimate=48.00MB mem-reservation=512.00KB thread-reservation=1
|     tuple-ids=0 row-size=27B cardinality=373
|     in pipelines: 00(GETNEXT)
|
01:SCAN HDFS [tpcds_parquet.store_sales, RANDOM]
   HDFS partitions=1824/1824 files=1824 size=200.96MB
   runtime filters: RF001[min_max] -> ss_store_sk, RF000[bloom] -> ss_store_sk, RF002[bloom] -> ss_sold_date_sk
   stored statistics:
     table: rows=2.88M size=200.96MB
     partitions: 1824/1824 rows=2.88M
     columns: all
   extrapolated-rows=disabled max-scan-range-rows=130.09K
   mem-estimate=32.00MB mem-reservation=512.00KB thread-reservation=1
   tuple-ids=1 row-size=12B cardinality=2.88M
   in pipelines: 01(GETNEXT)
---- PARALLELPLANS
Max Per-Host Resource Reservation: Memory=25.16MB Threads=9
Per-Host Resource Estimates: Memory=120MB
F04:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
|  Per-Instance Resources: mem-estimate=4.05MB mem-reservation=4.00MB thread-reservation=1
PLAN-ROOT SINK
|  output exprs: s_store_name, s_store_id, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|
11:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: s_store_name ASC, s_store_id ASC, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) ASC
|  limit: 100
|  mem-estimate=47.51KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=156B cardinality=48
|  in pipelines: 06(GETNEXT)
|
F03:PLAN FRAGMENT [HASH(s_store_name,s_store_id)] hosts=3 instances=6
Per-Instance Resources: mem-estimate=10.05MB mem-reservation=1.94MB thread-reservation=1
06:TOP-N [LIMIT=100]
|  order by: s_store_name ASC, s_store_id ASC, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) ASC
|  mem-estimate=7.32KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=156B cardinality=48
|  in pipelines: 06(GETNEXT), 10(OPEN)
|
10:AGGREGATE [FINALIZE]
|  output: sum:merge(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  group by: s_store_name, s_store_id
|  mem-estimate=10.00MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=48
|  in pipelines: 10(GETNEXT), 01(OPEN)
|
09:EXCHANGE [HASH(s_store_name,s_store_id)]
|  mem-estimate=47.51KB mem-reservation=0B thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=48
|  in pipelines: 01(GETNEXT)
|
F00:PLAN FRAGMENT [RANDOM] hosts=3 instances=6
Per-Host Shared Resources: mem-estimate=2.00MB mem-reservation=2.00MB thread-reservation=0 runtime-filters-memory=2.00MB
Per-Instance Resources: mem-estimate=26.00MB mem-reservation=2.50MB thread-reservation=1
05:AGGREGATE [STREAMING]
|  output: sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  group by: s_store_name, s_store_id
|  mem-estimate=10.00MB mem-reservation=2.00MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=48
|  in pipelines: 01(GETNEXT)
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash-table-id=00
|  hash predicates: ss_store_sk = s_store_sk
|  fk/pk conjuncts: ss_store_sk = s_store_sk
|  mem-estimate=0B mem-reservation=0B spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0,2 row-size=91B cardinality=589.03K
|  in pipelines: 01(GETNEXT), 02(OPEN)
|
|--F05:PLAN FRAGMENT [RANDOM] hosts=3 instances=3
|  |  Per-Instance Resources: mem-estimate=4.89MB mem-reservation=4.88MB thread-reservation=1 runtime-filters-memory=1.00MB
|  JOIN BUILD
|  |  join-table-id=00 plan-id=01 cohort-id=01
|  |  build expressions: s_store_sk
|  |  runtime filters: RF000[bloom] <- s_store_sk, RF001[min_max] <- s_store_sk
|  |  mem-estimate=3.88MB mem-reservation=3.88MB spill-buffer=64.00KB thread-reservation=0
|  |
|  08:EXCHANGE [BROADCAST]
|  |  mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
|  |  tuple-ids=2 row-size=52B cardinality=12
|  |  in pipelines: 02(GETNEXT)
|  |
|  F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
|  Per-Instance Resources: mem-estimate=16.00MB mem-reservation=32.00KB thread-reservation=1
|  02:SCAN HDFS [tpcds_parquet.store, RANDOM]
|     HDFS partitions=1/1 files=1 size=9.93KB
|     predicates: s_gmt_offset = CAST(-5 AS DECIMAL(3,0))
|     stored statistics:
|       table: rows=12 size=9.93KB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=12
|     parquet statistics predicates: s_gmt_offset = CAST(-5 AS DECIMAL(3,0))
|     parquet dictionary predicates: s_gmt_offset = CAST(-5 AS DECIMAL(3,0))
|     mem-estimate=16.00MB mem-reservation=32.00KB thread-reservation=0
|     tuple-ids=2 row-size=52B cardinality=12
|     in pipelines: 02(GETNEXT)
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash-table-id=01
|  hash predicates: ss_sold_date_sk = d_date_sk
|  fk/pk conjuncts: ss_sold_date_sk = d_date_sk
|  mem-estimate=0B mem-reservation=0B spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0 row-size=39B cardinality=589.03K
|  in pipelines: 01(GETNEXT), 00(OPEN)
|
|--F06:PLAN FRAGMENT [RANDOM] hosts=3 instances=3
|  |  Per-Instance Resources: mem-estimate=4.90MB mem-reservation=4.88MB thread-reservation=1 runtime-filters-memory=1.00MB
|  JOIN BUILD
|  |  join-table-id=01 plan-id=02 cohort-id=01
|  |  build expressions: d_date_sk
|  |  runtime filters: RF002[bloom] <- d_date_sk
|  |  mem-estimate=3.88MB mem-reservation=3.88MB spill-buffer=64.00KB thread-reservation=0
|  |
|  07:EXCHANGE [BROADCAST]
|  |  mem-estimate=21.23KB mem-reservation=0B thread-reservation=0
|  |  tuple-ids=0 row-size=27B cardinality=373
|  |  in pipelines: 00(GETNEXT)
|  |
|  F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
|  Per-Instance Resources: mem-estimate=16.00MB mem-reservation=512.00KB thread-reservation=1
|  00:SCAN HDFS [tpcds_parquet.date_dim, RANDOM]
|     HDFS partitions=1/1 files=1 size=2.15MB
|     predicates: d_year = CAST(1998 AS INT)
|     stored statistics:
|       table: rows=73.05K size=2.15MB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=73.05K
|     parquet statistics predicates: d_year = CAST(1998 AS INT)
|     parquet dictionary predicates: d_year = CAST(1998 AS INT)
|     mem-estimate=16.00MB mem-reservation=512.00KB thread-reservation=0
|     tuple-ids=0 row-size=27B cardinality=373
|     in pipelines: 00(GETNEXT)
|
01:SCAN HDFS [tpcds_parquet.store_sales, RANDOM]
   HDFS partitions=1824/1824 files=1824 size=200.96MB
   runtime filters: RF001[min_max] -> ss_store_sk, RF000[bloom] -> ss_store_sk, RF002[bloom] -> ss_sold_date_sk
   stored statistics:
     table: rows=2.88M size=200.96MB
     partitions: 1824/1824 rows=2.88M
     columns: all
   extrapolated-rows=disabled max-scan-range-rows=130.09K
   mem-estimate=16.00MB mem-reservation=512.00KB thread-reservation=0
   tuple-ids=1 row-size=12B cardinality=2.88M
   in pipelines: 01(GETNEXT)
====
