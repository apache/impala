# IMPALA-9000: analytic functions could be underparallelised when partition by has
# overlapping partition keys. ss_store_sk is the overlapping column in the partition key,
# and only has NDV=6, so partitioning only on ss_store_sk would not give maximal
# parallelism (3 backends, with mt_dop=4, means we want at least 12-way parallelism).
select count(*) over (partition by ss_addr_sk, ss_store_sk),
       count(*) over (partition by ss_sold_date_sk, ss_store_sk)
from tpcds_parquet.store_sales
---- PLAN
PLAN-ROOT SINK
|
04:ANALYTIC
|  functions: count(*)
|  partition by: ss_sold_date_sk, ss_store_sk
|  row-size=28B cardinality=2.88M
|
03:SORT
|  order by: ss_sold_date_sk ASC NULLS LAST, ss_store_sk ASC NULLS LAST
|  row-size=20B cardinality=2.88M
|
02:ANALYTIC
|  functions: count(*)
|  partition by: ss_addr_sk, ss_store_sk
|  row-size=20B cardinality=2.88M
|
01:SORT
|  order by: ss_addr_sk ASC NULLS LAST, ss_store_sk ASC NULLS LAST
|  row-size=12B cardinality=2.88M
|
00:SCAN HDFS [tpcds_parquet.store_sales]
   HDFS partitions=1824/1824 files=1824 size=200.95MB
   row-size=12B cardinality=2.88M
---- PARALLELPLANS
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
04:ANALYTIC
|  functions: count(*)
|  partition by: ss_sold_date_sk, ss_store_sk
|  row-size=28B cardinality=2.88M
|
03:SORT
|  order by: ss_sold_date_sk ASC NULLS LAST, ss_store_sk ASC NULLS LAST
|  row-size=20B cardinality=2.88M
|
06:EXCHANGE [HASH(ss_sold_date_sk,ss_store_sk)]
|
02:ANALYTIC
|  functions: count(*)
|  partition by: ss_addr_sk, ss_store_sk
|  row-size=20B cardinality=2.88M
|
01:SORT
|  order by: ss_addr_sk ASC NULLS LAST, ss_store_sk ASC NULLS LAST
|  row-size=12B cardinality=2.88M
|
05:EXCHANGE [HASH(ss_addr_sk,ss_store_sk)]
|
00:SCAN HDFS [tpcds_parquet.store_sales]
   HDFS partitions=1824/1824 files=1824 size=200.95MB
   row-size=12B cardinality=2.88M
====
# Negative case for IMPALA-9000 - ss_item_sk has NDV=17975 and thus partitioning on it
# gives plenty of parallelism, and we can avoid the extra exchange.
select count(*) over (partition by ss_addr_sk, ss_item_sk),
       count(*) over (partition by ss_sold_date_sk, ss_item_sk)
from tpcds_parquet.store_sales
---- PLAN
PLAN-ROOT SINK
|
04:ANALYTIC
|  functions: count(*)
|  partition by: ss_sold_date_sk, ss_item_sk
|  row-size=32B cardinality=2.88M
|
03:SORT
|  order by: ss_sold_date_sk ASC NULLS LAST, ss_item_sk ASC NULLS LAST
|  row-size=24B cardinality=2.88M
|
02:ANALYTIC
|  functions: count(*)
|  partition by: ss_addr_sk, ss_item_sk
|  row-size=24B cardinality=2.88M
|
01:SORT
|  order by: ss_addr_sk ASC NULLS LAST, ss_item_sk ASC NULLS LAST
|  row-size=16B cardinality=2.88M
|
00:SCAN HDFS [tpcds_parquet.store_sales]
   HDFS partitions=1824/1824 files=1824 size=200.95MB
   row-size=16B cardinality=2.88M
---- PARALLELPLANS
PLAN-ROOT SINK
|
06:EXCHANGE [UNPARTITIONED]
|
04:ANALYTIC
|  functions: count(*)
|  partition by: ss_sold_date_sk, ss_item_sk
|  row-size=32B cardinality=2.88M
|
03:SORT
|  order by: ss_sold_date_sk ASC NULLS LAST, ss_item_sk ASC NULLS LAST
|  row-size=24B cardinality=2.88M
|
02:ANALYTIC
|  functions: count(*)
|  partition by: ss_addr_sk, ss_item_sk
|  row-size=24B cardinality=2.88M
|
01:SORT
|  order by: ss_addr_sk ASC NULLS LAST, ss_item_sk ASC NULLS LAST
|  row-size=16B cardinality=2.88M
|
05:EXCHANGE [HASH(ss_item_sk)]
|
00:SCAN HDFS [tpcds_parquet.store_sales]
   HDFS partitions=1824/1824 files=1824 size=200.95MB
   row-size=16B cardinality=2.88M
====
