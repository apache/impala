# TPCDS-Q43
# start query 43 in stream 0 using template query43.tpl using seed 845278100
select  s_store_name, s_store_id,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from date_dim, store_sales, store
 where d_date_sk = ss_sold_date_sk and
       s_store_sk = ss_store_sk and
       s_gmt_offset = -6 and
       d_year = 1999
 group by s_store_name, s_store_id
 order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales
 limit 100;

# end query 43 in stream 0 using template query43.tpl
---- PLAN
Max Per-Host Resource Reservation: Memory=26.41MB Threads=1
Per-Host Resource Estimates: Memory=66MB
F00:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
|  Per-Instance Resources: mem-estimate=65.88MB mem-reservation=26.41MB thread-reservation=1 runtime-filters-memory=2.00MB
|  max-parallelism=1 segment-costs=[3286411638, 7914, 900]
PLAN-ROOT SINK
|  output exprs: s_store_name, s_store_id, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0 cost=900
|
06:TOP-N [LIMIT=100]
|  order by: s_store_name ASC, s_store_id ASC, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) ASC
|  mem-estimate=15.23KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=156B cardinality=100 cost=7914
|  in pipelines: 06(GETNEXT), 05(OPEN)
|
09:TUPLE CACHE
|  cache key: bc58333f8d20b5dc8da06ea825f57010
|  input scan node ids: 1,0,2
|  estimated serialized size: 210.86KB
|  estimated serialized size per node: 21.08KB
|  cumulative processing cost: 3286411638
|  cache read processing cost: 179
|  cache write processing cost: 582
|  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=1.35K cost=0
|  in pipelines: 05(GETNEXT)
|
05:AGGREGATE [FINALIZE]
|  output: sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  group by: s_store_name, s_store_id
|  mem-estimate=10.00MB mem-reservation=2.88MB spill-buffer=128.00KB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=1.35K cost=1593602192
|  in pipelines: 05(GETNEXT), 01(OPEN)
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: ss_store_sk = s_store_sk
|  fk/pk conjuncts: ss_store_sk = s_store_sk
|  runtime filters: RF000[bloom] <- s_store_sk, RF001[min_max] <- s_store_sk
|  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0,2 row-size=91B cardinality=888.24M cost=614141498
|  in pipelines: 01(GETNEXT), 02(OPEN)
|
|--08:TUPLE CACHE
|  |  cache key: 3698a1cf052d6b13deceda607a37da38
|  |  input scan node ids: 2
|  |  estimated serialized size: 18.35KB
|  |  estimated serialized size per node: 18.35KB
|  |  cumulative processing cost: 581
|  |  cache read processing cost: 44
|  |  cache write processing cost: 50
|  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|  |  tuple-ids=2 row-size=52B cardinality=336 cost=0
|  |  in pipelines: 02(GETNEXT)
|  |
|  02:SCAN HDFS [tpcds_partitioned_parquet_snap.store]
|     HDFS partitions=1/1 files=1 size=119.76KB
|     deterministic scan range assignment: true
|     schedule scan ranges oldest to newest: true
|     predicates: s_gmt_offset = CAST(-6 AS DECIMAL(3,0))
|     stored statistics:
|       table: rows=1.35K size=119.76KB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=1.35K
|     parquet statistics predicates: s_gmt_offset = CAST(-6 AS DECIMAL(3,0))
|     parquet dictionary predicates: s_gmt_offset = CAST(-6 AS DECIMAL(3,0))
|     mem-estimate=16.00MB mem-reservation=32.00KB thread-reservation=0
|     tuple-ids=2 row-size=52B cardinality=336 cost=581
|     in pipelines: 02(GETNEXT)
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: ss_sold_date_sk = d_date_sk
|  fk/pk conjuncts: ss_sold_date_sk = d_date_sk
|  runtime filters: RF002[bloom] <- d_date_sk
|  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0 row-size=39B cardinality=1.77G cost=773341361
|  in pipelines: 01(GETNEXT), 00(OPEN)
|
|--07:TUPLE CACHE
|  |  cache key: 36097366b8f6eb71c982c7d0976461a6
|  |  input scan node ids: 0
|  |  estimated serialized size: 11.34KB
|  |  estimated serialized size per node: 11.34KB
|  |  cumulative processing cost: 17981
|  |  cache read processing cost: 49
|  |  cache write processing cost: 31
|  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|  |  tuple-ids=0 row-size=27B cardinality=373 cost=0
|  |  in pipelines: 00(GETNEXT)
|  |
|  00:SCAN HDFS [tpcds_partitioned_parquet_snap.date_dim]
|     HDFS partitions=1/1 files=1 size=2.17MB
|     deterministic scan range assignment: true
|     schedule scan ranges oldest to newest: true
|     predicates: d_year = CAST(1999 AS INT)
|     stored statistics:
|       table: rows=73.05K size=2.17MB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=73.05K
|     parquet statistics predicates: d_year = CAST(1999 AS INT)
|     parquet dictionary predicates: d_year = CAST(1999 AS INT)
|     mem-estimate=16.00MB mem-reservation=512.00KB thread-reservation=0
|     tuple-ids=0 row-size=27B cardinality=373 cost=17981
|     in pipelines: 00(GETNEXT)
|
01:SCAN HDFS [tpcds_partitioned_parquet_snap.store_sales]
   HDFS partitions=1824/1824 files=1824 size=389.90GB
   deterministic scan range assignment: true
   schedule scan ranges oldest to newest: true
   runtime filters: RF001[min_max] -> ss_store_sk, RF000[bloom] -> ss_store_sk, RF002[bloom] -> ss_sold_date_sk
   stored statistics:
     table: rows=8.64G size=389.90GB
     partitions: 1824/1824 rows=8.64G
     columns: all
   extrapolated-rows=disabled max-scan-range-rows=390.22M est-scan-range=374(filtered from 1824)
   mem-estimate=16.00MB mem-reservation=8.00MB thread-reservation=0
   tuple-ids=1 row-size=12B cardinality=1.77G(filtered from 8.64G) cost=305308025
   in pipelines: 01(GETNEXT)
---- DISTRIBUTEDPLAN
Max Per-Host Resource Reservation: Memory=244.97MB Threads=18
Per-Host Resource Estimates: Memory=561MB
F04:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
|  Per-Instance Resources: mem-estimate=4.15MB mem-reservation=4.00MB thread-reservation=1
|  max-parallelism=1 segment-costs=[956] cpu-comparison-result=120 [max(1 (self) vs 120 (sum children))]
PLAN-ROOT SINK
|  output exprs: s_store_name, s_store_id, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0 cost=900
|
11:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: s_store_name ASC, s_store_id ASC, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) ASC
|  limit: 100
|  mem-estimate=157.71KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=156B cardinality=100 cost=56
|  in pipelines: 06(GETNEXT)
|
F03:PLAN FRAGMENT [HASH(s_store_name,s_store_id)] hosts=10 instances=10 (adjusted from 120)
Per-Instance Resources: mem-estimate=31.15MB mem-reservation=1.94MB thread-reservation=1
max-parallelism=10 segment-costs=[430960, 7914, 439] cpu-comparison-result=120 [max(10 (self) vs 120 (sum children))]
06:TOP-N [LIMIT=100]
|  order by: s_store_name ASC, s_store_id ASC, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) ASC
|  mem-estimate=15.23KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=156B cardinality=100 cost=7914
|  in pipelines: 06(GETNEXT), 10(OPEN)
|
10:AGGREGATE [FINALIZE]
|  output: sum:merge(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  group by: s_store_name, s_store_id
|  mem-estimate=10.00MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=1.35K cost=296757
|  in pipelines: 10(GETNEXT), 01(OPEN)
|
09:EXCHANGE [HASH(s_store_name,s_store_id)]
|  mem-estimate=21.15MB mem-reservation=0B thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=162.00K cost=134203
|  in pipelines: 01(GETNEXT)
|
F00:PLAN FRAGMENT [RANDOM] hosts=10 instances=120
Per-Host Shared Resources: mem-estimate=2.00MB mem-reservation=2.00MB thread-reservation=0 runtime-filters-memory=2.00MB
Per-Instance Resources: mem-estimate=36.25MB mem-reservation=15.00MB thread-reservation=1
max-parallelism=330 segment-costs=[3287119871, 1710341] cpu-comparison-result=120 [max(120 (self) vs 22 (sum children))]
14:TUPLE CACHE
|  cache key: 42dfa7b519cd3304d62c1f04735a6cb1
|  input scan node ids: 1
|  estimated serialized size: 24.71MB
|  estimated serialized size per node: 2.47MB
|  cumulative processing cost: 3287140161
|  cache read processing cost: 21529
|  cache write processing cost: 69957
|  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=162.00K cost=0
|  in pipelines: 01(GETNEXT)
|
05:AGGREGATE [STREAMING]
|  output: sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  group by: s_store_name, s_store_id
|  mem-estimate=10.00MB mem-reservation=3.00MB spill-buffer=128.00KB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=162.00K cost=1594329696
|  in pipelines: 01(GETNEXT)
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash-table-id=00
|  hash predicates: ss_store_sk = s_store_sk
|  fk/pk conjuncts: ss_store_sk = s_store_sk
|  mem-estimate=0B mem-reservation=0B spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0,2 row-size=91B cardinality=888.24M cost=614141162
|  in pipelines: 01(GETNEXT), 02(OPEN)
|
|--F05:PLAN FRAGMENT [RANDOM] hosts=10 instances=10
|  |  Per-Instance Resources: mem-estimate=24.28MB mem-reservation=24.25MB thread-reservation=1 runtime-filters-memory=1.00MB
|  |  max-parallelism=10 segment-costs=[776]
|  JOIN BUILD
|  |  join-table-id=00 plan-id=01 cohort-id=01
|  |  build expressions: s_store_sk
|  |  runtime filters: RF000[bloom] <- s_store_sk, RF001[min_max] <- s_store_sk
|  |  mem-estimate=23.25MB mem-reservation=23.25MB spill-buffer=64.00KB thread-reservation=0 cost=336
|  |
|  08:EXCHANGE [BROADCAST]
|  |  mem-estimate=35.40KB mem-reservation=0B thread-reservation=0
|  |  tuple-ids=2 row-size=52B cardinality=336 cost=440
|  |  in pipelines: 02(GETNEXT)
|  |
|  F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
|  Per-Instance Resources: mem-estimate=20.22MB mem-reservation=4.03MB thread-reservation=1
|  max-parallelism=1 segment-costs=[635]
|  13:TUPLE CACHE
|  |  cache key: 3698a1cf052d6b13deceda607a37da38
|  |  input scan node ids: 2
|  |  estimated serialized size: 18.35KB
|  |  estimated serialized size per node: 18.35KB
|  |  cumulative processing cost: 581
|  |  cache read processing cost: 44
|  |  cache write processing cost: 50
|  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|  |  tuple-ids=2 row-size=52B cardinality=336 cost=0
|  |  in pipelines: 02(GETNEXT)
|  |
|  02:SCAN HDFS [tpcds_partitioned_parquet_snap.store, RANDOM]
|     HDFS partitions=1/1 files=1 size=119.76KB
|     deterministic scan range assignment: true
|     schedule scan ranges oldest to newest: true
|     predicates: s_gmt_offset = CAST(-6 AS DECIMAL(3,0))
|     stored statistics:
|       table: rows=1.35K size=119.76KB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=1.35K
|     parquet statistics predicates: s_gmt_offset = CAST(-6 AS DECIMAL(3,0))
|     parquet dictionary predicates: s_gmt_offset = CAST(-6 AS DECIMAL(3,0))
|     mem-estimate=16.00MB mem-reservation=32.00KB thread-reservation=0
|     tuple-ids=2 row-size=52B cardinality=336 cost=581
|     in pipelines: 02(GETNEXT)
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash-table-id=01
|  hash predicates: ss_sold_date_sk = d_date_sk
|  fk/pk conjuncts: ss_sold_date_sk = d_date_sk
|  mem-estimate=0B mem-reservation=0B spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0 row-size=39B cardinality=1.77G cost=773340988
|  in pipelines: 01(GETNEXT), 00(OPEN)
|
|--F06:PLAN FRAGMENT [RANDOM] hosts=10 instances=10
|  |  Per-Instance Resources: mem-estimate=24.27MB mem-reservation=24.25MB thread-reservation=1 runtime-filters-memory=1.00MB
|  |  max-parallelism=10 segment-costs=[863]
|  JOIN BUILD
|  |  join-table-id=01 plan-id=02 cohort-id=01
|  |  build expressions: d_date_sk
|  |  runtime filters: RF002[bloom] <- d_date_sk
|  |  mem-estimate=23.25MB mem-reservation=23.25MB spill-buffer=64.00KB thread-reservation=0 cost=373
|  |
|  07:EXCHANGE [BROADCAST]
|  |  mem-estimate=21.23KB mem-reservation=0B thread-reservation=0
|  |  tuple-ids=0 row-size=27B cardinality=373 cost=490
|  |  in pipelines: 00(GETNEXT)
|  |
|  F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
|  Per-Instance Resources: mem-estimate=20.12MB mem-reservation=4.50MB thread-reservation=1
|  max-parallelism=1 segment-costs=[18016]
|  12:TUPLE CACHE
|  |  cache key: 36097366b8f6eb71c982c7d0976461a6
|  |  input scan node ids: 0
|  |  estimated serialized size: 11.34KB
|  |  estimated serialized size per node: 11.34KB
|  |  cumulative processing cost: 17981
|  |  cache read processing cost: 49
|  |  cache write processing cost: 31
|  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|  |  tuple-ids=0 row-size=27B cardinality=373 cost=0
|  |  in pipelines: 00(GETNEXT)
|  |
|  00:SCAN HDFS [tpcds_partitioned_parquet_snap.date_dim, RANDOM]
|     HDFS partitions=1/1 files=1 size=2.17MB
|     deterministic scan range assignment: true
|     schedule scan ranges oldest to newest: true
|     predicates: d_year = CAST(1999 AS INT)
|     stored statistics:
|       table: rows=73.05K size=2.17MB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=73.05K
|     parquet statistics predicates: d_year = CAST(1999 AS INT)
|     parquet dictionary predicates: d_year = CAST(1999 AS INT)
|     mem-estimate=16.00MB mem-reservation=512.00KB thread-reservation=0
|     tuple-ids=0 row-size=27B cardinality=373 cost=17981
|     in pipelines: 00(GETNEXT)
|
01:SCAN HDFS [tpcds_partitioned_parquet_snap.store_sales, RANDOM]
   HDFS partitions=1824/1824 files=1824 size=389.90GB
   deterministic scan range assignment: true
   schedule scan ranges oldest to newest: true
   runtime filters: RF001[min_max] -> ss_store_sk, RF000[bloom] -> ss_store_sk, RF002[bloom] -> ss_sold_date_sk
   stored statistics:
     table: rows=8.64G size=389.90GB
     partitions: 1824/1824 rows=8.64G
     columns: all
   extrapolated-rows=disabled max-scan-range-rows=390.22M est-scan-range=374(filtered from 1824)
   mem-estimate=16.00MB mem-reservation=8.00MB thread-reservation=0
   tuple-ids=1 row-size=12B cardinality=1.77G(filtered from 8.64G) cost=305308025
   in pipelines: 01(GETNEXT)
---- PARALLELPLANS
Max Per-Host Resource Reservation: Memory=244.97MB Threads=18
Per-Host Resource Estimates: Memory=561MB
F04:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
|  Per-Instance Resources: mem-estimate=4.15MB mem-reservation=4.00MB thread-reservation=1
|  max-parallelism=1 segment-costs=[956] cpu-comparison-result=120 [max(1 (self) vs 120 (sum children))]
PLAN-ROOT SINK
|  output exprs: s_store_name, s_store_id, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0 cost=900
|
11:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: s_store_name ASC, s_store_id ASC, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) ASC
|  limit: 100
|  mem-estimate=157.71KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=156B cardinality=100 cost=56
|  in pipelines: 06(GETNEXT)
|
F03:PLAN FRAGMENT [HASH(s_store_name,s_store_id)] hosts=10 instances=10 (adjusted from 120)
Per-Instance Resources: mem-estimate=31.15MB mem-reservation=1.94MB thread-reservation=1
max-parallelism=10 segment-costs=[430960, 7914, 439] cpu-comparison-result=120 [max(10 (self) vs 120 (sum children))]
06:TOP-N [LIMIT=100]
|  order by: s_store_name ASC, s_store_id ASC, sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END) ASC, sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END) ASC
|  mem-estimate=15.23KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=156B cardinality=100 cost=7914
|  in pipelines: 06(GETNEXT), 10(OPEN)
|
10:AGGREGATE [FINALIZE]
|  output: sum:merge(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum:merge(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  group by: s_store_name, s_store_id
|  mem-estimate=10.00MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=1.35K cost=296757
|  in pipelines: 10(GETNEXT), 01(OPEN)
|
09:EXCHANGE [HASH(s_store_name,s_store_id)]
|  mem-estimate=21.15MB mem-reservation=0B thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=162.00K cost=134203
|  in pipelines: 01(GETNEXT)
|
F00:PLAN FRAGMENT [RANDOM] hosts=10 instances=120
Per-Host Shared Resources: mem-estimate=2.00MB mem-reservation=2.00MB thread-reservation=0 runtime-filters-memory=2.00MB
Per-Instance Resources: mem-estimate=36.25MB mem-reservation=15.00MB thread-reservation=1
max-parallelism=330 segment-costs=[3287119871, 1710341] cpu-comparison-result=120 [max(120 (self) vs 22 (sum children))]
14:TUPLE CACHE
|  cache key: 42dfa7b519cd3304d62c1f04735a6cb1
|  input scan node ids: 1
|  estimated serialized size: 24.71MB
|  estimated serialized size per node: 2.47MB
|  cumulative processing cost: 3287140161
|  cache read processing cost: 21529
|  cache write processing cost: 69957
|  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=162.00K cost=0
|  in pipelines: 01(GETNEXT)
|
05:AGGREGATE [STREAMING]
|  output: sum(CASE WHEN (d_day_name = 'Sunday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Monday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Tuesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Wednesday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Thursday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Friday') THEN ss_sales_price ELSE NULL END), sum(CASE WHEN (d_day_name = 'Saturday') THEN ss_sales_price ELSE NULL END)
|  group by: s_store_name, s_store_id
|  mem-estimate=10.00MB mem-reservation=3.00MB spill-buffer=128.00KB thread-reservation=0
|  tuple-ids=3 row-size=156B cardinality=162.00K cost=1594329696
|  in pipelines: 01(GETNEXT)
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash-table-id=00
|  hash predicates: ss_store_sk = s_store_sk
|  fk/pk conjuncts: ss_store_sk = s_store_sk
|  mem-estimate=0B mem-reservation=0B spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0,2 row-size=91B cardinality=888.24M cost=614141162
|  in pipelines: 01(GETNEXT), 02(OPEN)
|
|--F05:PLAN FRAGMENT [RANDOM] hosts=10 instances=10
|  |  Per-Instance Resources: mem-estimate=24.28MB mem-reservation=24.25MB thread-reservation=1 runtime-filters-memory=1.00MB
|  |  max-parallelism=10 segment-costs=[776]
|  JOIN BUILD
|  |  join-table-id=00 plan-id=01 cohort-id=01
|  |  build expressions: s_store_sk
|  |  runtime filters: RF000[bloom] <- s_store_sk, RF001[min_max] <- s_store_sk
|  |  mem-estimate=23.25MB mem-reservation=23.25MB spill-buffer=64.00KB thread-reservation=0 cost=336
|  |
|  08:EXCHANGE [BROADCAST]
|  |  mem-estimate=35.40KB mem-reservation=0B thread-reservation=0
|  |  tuple-ids=2 row-size=52B cardinality=336 cost=440
|  |  in pipelines: 02(GETNEXT)
|  |
|  F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
|  Per-Instance Resources: mem-estimate=20.22MB mem-reservation=4.03MB thread-reservation=1
|  max-parallelism=1 segment-costs=[635]
|  13:TUPLE CACHE
|  |  cache key: 3698a1cf052d6b13deceda607a37da38
|  |  input scan node ids: 2
|  |  estimated serialized size: 18.35KB
|  |  estimated serialized size per node: 18.35KB
|  |  cumulative processing cost: 581
|  |  cache read processing cost: 44
|  |  cache write processing cost: 50
|  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|  |  tuple-ids=2 row-size=52B cardinality=336 cost=0
|  |  in pipelines: 02(GETNEXT)
|  |
|  02:SCAN HDFS [tpcds_partitioned_parquet_snap.store, RANDOM]
|     HDFS partitions=1/1 files=1 size=119.76KB
|     deterministic scan range assignment: true
|     schedule scan ranges oldest to newest: true
|     predicates: s_gmt_offset = CAST(-6 AS DECIMAL(3,0))
|     stored statistics:
|       table: rows=1.35K size=119.76KB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=1.35K
|     parquet statistics predicates: s_gmt_offset = CAST(-6 AS DECIMAL(3,0))
|     parquet dictionary predicates: s_gmt_offset = CAST(-6 AS DECIMAL(3,0))
|     mem-estimate=16.00MB mem-reservation=32.00KB thread-reservation=0
|     tuple-ids=2 row-size=52B cardinality=336 cost=581
|     in pipelines: 02(GETNEXT)
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash-table-id=01
|  hash predicates: ss_sold_date_sk = d_date_sk
|  fk/pk conjuncts: ss_sold_date_sk = d_date_sk
|  mem-estimate=0B mem-reservation=0B spill-buffer=64.00KB thread-reservation=0
|  tuple-ids=1,0 row-size=39B cardinality=1.77G cost=773340988
|  in pipelines: 01(GETNEXT), 00(OPEN)
|
|--F06:PLAN FRAGMENT [RANDOM] hosts=10 instances=10
|  |  Per-Instance Resources: mem-estimate=24.27MB mem-reservation=24.25MB thread-reservation=1 runtime-filters-memory=1.00MB
|  |  max-parallelism=10 segment-costs=[863]
|  JOIN BUILD
|  |  join-table-id=01 plan-id=02 cohort-id=01
|  |  build expressions: d_date_sk
|  |  runtime filters: RF002[bloom] <- d_date_sk
|  |  mem-estimate=23.25MB mem-reservation=23.25MB spill-buffer=64.00KB thread-reservation=0 cost=373
|  |
|  07:EXCHANGE [BROADCAST]
|  |  mem-estimate=21.23KB mem-reservation=0B thread-reservation=0
|  |  tuple-ids=0 row-size=27B cardinality=373 cost=490
|  |  in pipelines: 00(GETNEXT)
|  |
|  F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
|  Per-Instance Resources: mem-estimate=20.12MB mem-reservation=4.50MB thread-reservation=1
|  max-parallelism=1 segment-costs=[18016]
|  12:TUPLE CACHE
|  |  cache key: 36097366b8f6eb71c982c7d0976461a6
|  |  input scan node ids: 0
|  |  estimated serialized size: 11.34KB
|  |  estimated serialized size per node: 11.34KB
|  |  cumulative processing cost: 17981
|  |  cache read processing cost: 49
|  |  cache write processing cost: 31
|  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
|  |  tuple-ids=0 row-size=27B cardinality=373 cost=0
|  |  in pipelines: 00(GETNEXT)
|  |
|  00:SCAN HDFS [tpcds_partitioned_parquet_snap.date_dim, RANDOM]
|     HDFS partitions=1/1 files=1 size=2.17MB
|     deterministic scan range assignment: true
|     schedule scan ranges oldest to newest: true
|     predicates: d_year = CAST(1999 AS INT)
|     stored statistics:
|       table: rows=73.05K size=2.17MB
|       columns: all
|     extrapolated-rows=disabled max-scan-range-rows=73.05K
|     parquet statistics predicates: d_year = CAST(1999 AS INT)
|     parquet dictionary predicates: d_year = CAST(1999 AS INT)
|     mem-estimate=16.00MB mem-reservation=512.00KB thread-reservation=0
|     tuple-ids=0 row-size=27B cardinality=373 cost=17981
|     in pipelines: 00(GETNEXT)
|
01:SCAN HDFS [tpcds_partitioned_parquet_snap.store_sales, RANDOM]
   HDFS partitions=1824/1824 files=1824 size=389.90GB
   deterministic scan range assignment: true
   schedule scan ranges oldest to newest: true
   runtime filters: RF001[min_max] -> ss_store_sk, RF000[bloom] -> ss_store_sk, RF002[bloom] -> ss_sold_date_sk
   stored statistics:
     table: rows=8.64G size=389.90GB
     partitions: 1824/1824 rows=8.64G
     columns: all
   extrapolated-rows=disabled max-scan-range-rows=390.22M est-scan-range=374(filtered from 1824)
   mem-estimate=16.00MB mem-reservation=8.00MB thread-reservation=0
   tuple-ids=1 row-size=12B cardinality=1.77G(filtered from 8.64G) cost=305308025
   in pipelines: 01(GETNEXT)
====
