select id, int_col, bool_col, year, month from functional.alltypes
---- PLAN
PLAN-ROOT SINK
|
00:SCAN HDFS [functional.alltypes]
   HDFS partitions=24/24 files=24 size=478.45KB
   row-size=17B cardinality=7.30K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
01:EXCHANGE [UNPARTITIONED]
|
00:SCAN HDFS [functional.alltypes]
   HDFS partitions=24/24 files=24 size=478.45KB
   row-size=17B cardinality=7.30K
====
select c_custkey from tpch_jdbc.customer
---- PLAN
PLAN-ROOT SINK
|
00:SCAN DATA SOURCE [tpch_jdbc.customer]
   row-size=8B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
01:EXCHANGE [UNPARTITIONED]
|
00:SCAN DATA SOURCE [tpch_jdbc.customer]
   row-size=8B cardinality=150.00K
====

select c_custkey, c_name from tpch_jdbc.customer where c_custkey < 1000
---- PLAN
PLAN-ROOT SINK
|
00:SCAN DATA SOURCE [tpch_jdbc.customer]
   data source predicates: c_custkey < 1000
   row-size=20B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
01:EXCHANGE [UNPARTITIONED]
|
00:SCAN DATA SOURCE [tpch_jdbc.customer]
   data source predicates: c_custkey < 1000
   row-size=20B cardinality=150.00K
====
select o_orderkey, o_custkey from tpch_jdbc.orders where o_totalprice > 100000
---- PLAN
PLAN-ROOT SINK
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   data source predicates: o_totalprice > 100000
   row-size=16B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
01:EXCHANGE [UNPARTITIONED]
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   data source predicates: o_totalprice > 100000
   row-size=16B cardinality=1.50M
====
select a.c_custkey, b.o_orderkey from tpch_jdbc.customer
a join tpch_jdbc.orders b on a.c_custkey=b.o_custkey
---- PLAN
PLAN-ROOT SINK
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: a.c_custkey = b.o_custkey
|  row-size=24B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders b]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer a]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: a.c_custkey = b.o_custkey
|  row-size=24B cardinality=150.00K
|
|--03:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders b]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer a]
   row-size=0B cardinality=150.00K
====
select a.c_custkey, b.o_orderkey, c.l_linenumber from
tpch_jdbc.customer a join tpch_jdbc.orders b on
a.c_custkey=b.o_custkey join tpch_jdbc.lineitem c on
b.o_orderkey=c.l_orderkey
---- PLAN
PLAN-ROOT SINK
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: b.o_orderkey = c.l_orderkey
|  row-size=36B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem c]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: a.c_custkey = b.o_custkey
|  row-size=24B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders b]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer a]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: b.o_orderkey = c.l_orderkey
|  row-size=36B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem c]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: a.c_custkey = b.o_custkey
|  row-size=24B cardinality=150.00K
|
|--05:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders b]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer a]
   row-size=0B cardinality=150.00K
====
select a.c_name, count(b.o_orderkey) from tpch_jdbc.customer
a left join tpch_jdbc.orders b on a.c_custkey=b.o_custkey
group by a.c_name
---- PLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: count(b.o_orderkey)
|  group by: a.c_name
|  row-size=20B cardinality=150.00K
|
02:HASH JOIN [LEFT OUTER JOIN]
|  hash predicates: a.c_custkey = b.o_custkey
|  row-size=36B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders b]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer a]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
06:AGGREGATE [FINALIZE]
|  output: count:merge(b.o_orderkey)
|  group by: a.c_name
|  row-size=20B cardinality=150.00K
|
05:EXCHANGE [HASH(a.c_name)]
|
03:AGGREGATE [STREAMING]
|  output: count(b.o_orderkey)
|  group by: a.c_name
|  row-size=20B cardinality=150.00K
|
02:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
|  hash predicates: a.c_custkey = b.o_custkey
|  row-size=36B cardinality=150.00K
|
|--04:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders b]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer a]
   row-size=0B cardinality=150.00K
====
select count(*) from tpch_jdbc.lineitem
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: count(*)
|  row-size=8B cardinality=1
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: count:merge(*)
|  row-size=8B cardinality=1
|
02:EXCHANGE [UNPARTITIONED]
|
01:AGGREGATE
|  output: count(*)
|  row-size=8B cardinality=1
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
====
select avg(l_extendedprice) from tpch_jdbc.lineitem
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: avg(l_extendedprice)
|  row-size=8B cardinality=1
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: avg:merge(l_extendedprice)
|  row-size=8B cardinality=1
|
02:EXCHANGE [UNPARTITIONED]
|
01:AGGREGATE
|  output: avg(l_extendedprice)
|  row-size=8B cardinality=1
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
====
select c_custkey, c_name from tpch_jdbc.customer order by c_custkey limit 50
---- PLAN
PLAN-ROOT SINK
|
01:TOP-N [LIMIT=50]
|  order by: c_custkey ASC
|  row-size=20B cardinality=50
|
00:SCAN DATA SOURCE [tpch_jdbc.customer]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
02:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: c_custkey ASC
|  limit: 50
|
01:TOP-N [LIMIT=50]
|  order by: c_custkey ASC
|  row-size=20B cardinality=50
|
00:SCAN DATA SOURCE [tpch_jdbc.customer]
   row-size=0B cardinality=150.00K
====
select l_orderkey, sum(l_extendedprice) from tpch_jdbc.lineitem group by l_orderkey
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: sum(l_extendedprice)
|  group by: l_orderkey
|  row-size=24B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
03:AGGREGATE [FINALIZE]
|  output: sum:merge(l_extendedprice)
|  group by: l_orderkey
|  row-size=24B cardinality=6.00M
|
02:EXCHANGE [HASH(l_orderkey)]
|
01:AGGREGATE [STREAMING]
|  output: sum(l_extendedprice)
|  group by: l_orderkey
|  row-size=24B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
====
select n_name, count(*) from tpch_jdbc.nation group by n_name
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: count(*)
|  group by: n_name
|  row-size=20B cardinality=25
|
00:SCAN DATA SOURCE [tpch_jdbc.nation]
   row-size=0B cardinality=25
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
03:AGGREGATE [FINALIZE]
|  output: count:merge(*)
|  group by: n_name
|  row-size=20B cardinality=25
|
02:EXCHANGE [HASH(n_name)]
|
01:AGGREGATE [STREAMING]
|  output: count(*)
|  group by: n_name
|  row-size=20B cardinality=25
|
00:SCAN DATA SOURCE [tpch_jdbc.nation]
   row-size=0B cardinality=25
====
select r_name, n_name from tpch_jdbc.region r join
tpch_jdbc.nation n on r.r_regionkey=n.n_regionkey
---- PLAN
PLAN-ROOT SINK
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: r.r_regionkey = n.n_regionkey
|  row-size=28B cardinality=10
|
|--01:SCAN DATA SOURCE [tpch_jdbc.nation n]
|     row-size=0B cardinality=25
|
00:SCAN DATA SOURCE [tpch_jdbc.region r]
   row-size=0B cardinality=10
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: r.r_regionkey = n.n_regionkey
|  row-size=28B cardinality=10
|
|--03:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.nation n]
|     row-size=0B cardinality=25
|
00:SCAN DATA SOURCE [tpch_jdbc.region r]
   row-size=0B cardinality=10
====
select o_orderstatus, count(*) from tpch_jdbc.orders
group by o_orderstatus
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: count(*)
|  group by: o_orderstatus
|  row-size=20B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   row-size=0B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
03:AGGREGATE [FINALIZE]
|  output: count:merge(*)
|  group by: o_orderstatus
|  row-size=20B cardinality=1.50M
|
02:EXCHANGE [HASH(o_orderstatus)]
|
01:AGGREGATE [STREAMING]
|  output: count(*)
|  group by: o_orderstatus
|  row-size=20B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   row-size=0B cardinality=1.50M
====
select c_custkey, c_name from tpch_jdbc.customer where
c_custkey in (select o_custkey from tpch_jdbc.orders
where o_totalprice > 50000)
---- PLAN
PLAN-ROOT SINK
|
02:HASH JOIN [RIGHT SEMI JOIN]
|  hash predicates: o_custkey = c_custkey
|  row-size=20B cardinality=150.00K
|
|--00:SCAN DATA SOURCE [tpch_jdbc.customer]
|     row-size=0B cardinality=150.00K
|
01:SCAN DATA SOURCE [tpch_jdbc.orders]
   data source predicates: o_totalprice > 50000
   row-size=8B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
05:EXCHANGE [UNPARTITIONED]
|
02:HASH JOIN [RIGHT SEMI JOIN, PARTITIONED]
|  hash predicates: o_custkey = c_custkey
|  row-size=20B cardinality=150.00K
|
|--04:EXCHANGE [HASH(c_custkey)]
|  |
|  00:SCAN DATA SOURCE [tpch_jdbc.customer]
|     row-size=0B cardinality=150.00K
|
03:EXCHANGE [HASH(o_custkey)]
|
01:SCAN DATA SOURCE [tpch_jdbc.orders]
   data source predicates: o_totalprice > 50000
   row-size=8B cardinality=1.50M
====
select c.c_custkey, count(l.l_orderkey) from tpch_jdbc.customer
c join tpch_jdbc.orders o on c.c_custkey=o.o_custkey join
tpch_jdbc.lineitem l on o.o_orderkey=l.l_orderkey group by c.c_custkey
---- PLAN
PLAN-ROOT SINK
|
05:AGGREGATE [FINALIZE]
|  output: count(l.l_orderkey)
|  group by: c.c_custkey
|  row-size=16B cardinality=150.00K
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=32B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=24B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
10:EXCHANGE [UNPARTITIONED]
|
09:AGGREGATE [FINALIZE]
|  output: count:merge(l.l_orderkey)
|  group by: c.c_custkey
|  row-size=16B cardinality=150.00K
|
08:EXCHANGE [HASH(c.c_custkey)]
|
05:AGGREGATE [STREAMING]
|  output: count(l.l_orderkey)
|  group by: c.c_custkey
|  row-size=16B cardinality=150.00K
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=32B cardinality=150.00K
|
|--07:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=24B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select max(l_extendedprice), min(l_extendedprice) from tpch_jdbc.lineitem
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: max(l_extendedprice), min(l_extendedprice)
|  row-size=16B cardinality=1
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: max:merge(l_extendedprice), min:merge(l_extendedprice)
|  row-size=16B cardinality=1
|
02:EXCHANGE [UNPARTITIONED]
|
01:AGGREGATE
|  output: max(l_extendedprice), min(l_extendedprice)
|  row-size=16B cardinality=1
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
====
select c.c_custkey, o.o_orderdate from tpch_jdbc.customer c
join tpch_jdbc.orders o on c.c_custkey=o.o_custkey where
o.o_orderdate > '1995-01-01'
---- PLAN
PLAN-ROOT SINK
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=28B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     data source predicates: o.o_orderdate > '1995-01-01'
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=28B cardinality=150.00K
|
|--03:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     data source predicates: o.o_orderdate > '1995-01-01'
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select * from tpch_jdbc.customer where c_name like 'Customer#000%'
---- PLAN
PLAN-ROOT SINK
|
00:SCAN DATA SOURCE [tpch_jdbc.customer]
   predicates: c_name LIKE 'Customer#000%'
   row-size=78B cardinality=15.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
01:EXCHANGE [UNPARTITIONED]
|
00:SCAN DATA SOURCE [tpch_jdbc.customer]
   predicates: c_name LIKE 'Customer#000%'
   row-size=78B cardinality=15.00K
====
select l_orderkey, avg(l_quantity), avg(l_discount)
from tpch_jdbc.lineitem group by l_orderkey
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: avg(l_quantity), avg(l_discount)
|  group by: l_orderkey
|  row-size=24B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
03:AGGREGATE [FINALIZE]
|  output: avg:merge(l_quantity), avg:merge(l_discount)
|  group by: l_orderkey
|  row-size=24B cardinality=6.00M
|
02:EXCHANGE [HASH(l_orderkey)]
|
01:AGGREGATE [STREAMING]
|  output: avg(l_quantity), avg(l_discount)
|  group by: l_orderkey
|  row-size=24B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
====
select c.c_name, sum(l.l_extendedprice) from
tpch_jdbc.customer c join tpch_jdbc.orders o on
c.c_custkey=o.o_custkey join tpch_jdbc.lineitem l on
o.o_orderkey=l.l_orderkey group by c.c_name
---- PLAN
PLAN-ROOT SINK
|
05:AGGREGATE [FINALIZE]
|  output: sum(l.l_extendedprice)
|  group by: c.c_name
|  row-size=28B cardinality=150.00K
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=52B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=36B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
10:EXCHANGE [UNPARTITIONED]
|
09:AGGREGATE [FINALIZE]
|  output: sum:merge(l.l_extendedprice)
|  group by: c.c_name
|  row-size=28B cardinality=150.00K
|
08:EXCHANGE [HASH(c.c_name)]
|
05:AGGREGATE [STREAMING]
|  output: sum(l.l_extendedprice)
|  group by: c.c_name
|  row-size=28B cardinality=150.00K
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=52B cardinality=150.00K
|
|--07:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=36B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select l.l_orderkey, o.o_orderpriority, count(*)
from tpch_jdbc.orders o join tpch_jdbc.lineitem l on
o.o_orderkey=l.l_orderkey group by l.l_orderkey, o.o_orderpriority
---- PLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: count(*)
|  group by: l.l_orderkey, o.o_orderpriority
|  row-size=28B cardinality=1.50M
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=28B cardinality=1.50M
|
|--01:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders o]
   row-size=0B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
06:AGGREGATE [FINALIZE]
|  output: count:merge(*)
|  group by: l.l_orderkey, o.o_orderpriority
|  row-size=28B cardinality=1.50M
|
05:EXCHANGE [HASH(l.l_orderkey,o.o_orderpriority)]
|
03:AGGREGATE [STREAMING]
|  output: count(*)
|  group by: l.l_orderkey, o.o_orderpriority
|  row-size=28B cardinality=1.50M
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=28B cardinality=1.50M
|
|--04:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders o]
   row-size=0B cardinality=1.50M
====
select c.c_custkey from tpch_jdbc.customer c where
exists (select 1 from tpch_jdbc.orders o where
o.o_custkey=c.c_custkey)
---- PLAN
PLAN-ROOT SINK
|
02:HASH JOIN [RIGHT SEMI JOIN]
|  hash predicates: o.o_custkey = c.c_custkey
|  row-size=8B cardinality=150.00K
|
|--00:SCAN DATA SOURCE [tpch_jdbc.customer c]
|     row-size=0B cardinality=150.00K
|
01:SCAN DATA SOURCE [tpch_jdbc.orders o]
   row-size=8B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
05:EXCHANGE [UNPARTITIONED]
|
02:HASH JOIN [RIGHT SEMI JOIN, PARTITIONED]
|  hash predicates: o.o_custkey = c.c_custkey
|  row-size=8B cardinality=150.00K
|
|--04:EXCHANGE [HASH(c.c_custkey)]
|  |
|  00:SCAN DATA SOURCE [tpch_jdbc.customer c]
|     row-size=0B cardinality=150.00K
|
03:EXCHANGE [HASH(o.o_custkey)]
|
01:SCAN DATA SOURCE [tpch_jdbc.orders o]
   row-size=8B cardinality=1.50M
====
select o_orderpriority, sum(o_totalprice) from
tpch_jdbc.orders group by o_orderpriority
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: sum(o_totalprice)
|  group by: o_orderpriority
|  row-size=28B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   row-size=0B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
03:AGGREGATE [FINALIZE]
|  output: sum:merge(o_totalprice)
|  group by: o_orderpriority
|  row-size=28B cardinality=1.50M
|
02:EXCHANGE [HASH(o_orderpriority)]
|
01:AGGREGATE [STREAMING]
|  output: sum(o_totalprice)
|  group by: o_orderpriority
|  row-size=28B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   row-size=0B cardinality=1.50M
====
select c.c_custkey, sum(l.l_extendedprice) from
tpch_jdbc.customer c join tpch_jdbc.orders o on
c.c_custkey=o.o_custkey join tpch_jdbc.lineitem l on
o.o_orderkey=l.l_orderkey where l.l_discount > 0.05
group by c.c_custkey
---- PLAN
PLAN-ROOT SINK
|
05:AGGREGATE [FINALIZE]
|  output: sum(l.l_extendedprice)
|  group by: c.c_custkey
|  row-size=24B cardinality=150.00K
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=40B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     data source predicates: l.l_discount > 0.05
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=24B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
10:EXCHANGE [UNPARTITIONED]
|
09:AGGREGATE [FINALIZE]
|  output: sum:merge(l.l_extendedprice)
|  group by: c.c_custkey
|  row-size=24B cardinality=150.00K
|
08:EXCHANGE [HASH(c.c_custkey)]
|
05:AGGREGATE [STREAMING]
|  output: sum(l.l_extendedprice)
|  group by: c.c_custkey
|  row-size=24B cardinality=150.00K
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=40B cardinality=150.00K
|
|--07:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     data source predicates: l.l_discount > 0.05
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=24B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select c.c_name, o.o_orderstatus, count(*) from
tpch_jdbc.customer c join tpch_jdbc.orders o on
c.c_custkey=o.o_custkey group by c.c_name, o.o_orderstatus
---- PLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: count(*)
|  group by: c.c_name, o.o_orderstatus
|  row-size=32B cardinality=150.00K
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=40B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
06:AGGREGATE [FINALIZE]
|  output: count:merge(*)
|  group by: c.c_name, o.o_orderstatus
|  row-size=32B cardinality=150.00K
|
05:EXCHANGE [HASH(c.c_name,o.o_orderstatus)]
|
03:AGGREGATE [STREAMING]
|  output: count(*)
|  group by: c.c_name, o.o_orderstatus
|  row-size=32B cardinality=150.00K
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=40B cardinality=150.00K
|
|--04:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select o_orderkey, max(l_shipdate), min(l_commitdate)
from tpch_jdbc.orders o join tpch_jdbc.lineitem l on
o.o_orderkey=l.l_orderkey group by o_orderkey
---- PLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: max(l_shipdate), min(l_commitdate)
|  group by: o_orderkey
|  row-size=32B cardinality=1.50M
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=40B cardinality=1.50M
|
|--01:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders o]
   row-size=0B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
06:AGGREGATE [FINALIZE]
|  output: max:merge(l_shipdate), min:merge(l_commitdate)
|  group by: o_orderkey
|  row-size=32B cardinality=1.50M
|
05:EXCHANGE [HASH(o_orderkey)]
|
03:AGGREGATE [STREAMING]
|  output: max(l_shipdate), min(l_commitdate)
|  group by: o_orderkey
|  row-size=32B cardinality=1.50M
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=40B cardinality=1.50M
|
|--04:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders o]
   row-size=0B cardinality=1.50M
====
select sum(o_totalprice), avg(o_totalprice) from tpch_jdbc.orders
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: sum(o_totalprice), avg(o_totalprice)
|  row-size=24B cardinality=1
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   row-size=0B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: sum:merge(o_totalprice), avg:merge(o_totalprice)
|  row-size=24B cardinality=1
|
02:EXCHANGE [UNPARTITIONED]
|
01:AGGREGATE
|  output: sum(o_totalprice), avg(o_totalprice)
|  row-size=24B cardinality=1
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   row-size=0B cardinality=1.50M
====
select c.c_custkey, c.c_name, sum(o.o_totalprice)
from tpch_jdbc.customer c join tpch_jdbc.orders o on
c.c_custkey=o.o_custkey group by c.c_custkey, c.c_name
---- PLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: sum(o.o_totalprice)
|  group by: c.c_custkey, c.c_name
|  row-size=36B cardinality=150.00K
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=36B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
06:AGGREGATE [FINALIZE]
|  output: sum:merge(o.o_totalprice)
|  group by: c.c_custkey, c.c_name
|  row-size=36B cardinality=150.00K
|
05:EXCHANGE [HASH(c.c_custkey,c.c_name)]
|
03:AGGREGATE [STREAMING]
|  output: sum(o.o_totalprice)
|  group by: c.c_custkey, c.c_name
|  row-size=36B cardinality=150.00K
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=36B cardinality=150.00K
|
|--04:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select c.c_custkey, o.o_orderkey, l.l_linenumber,
l.l_extendedprice from tpch_jdbc.customer c join
tpch_jdbc.orders o on c.c_custkey=o.o_custkey join
tpch_jdbc.lineitem l on o.o_orderkey=l.l_orderkey
where l.l_shipdate > '1996-01-01'
---- PLAN
PLAN-ROOT SINK
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=44B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     data source predicates: l.l_shipdate > '1996-01-01'
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=24B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=44B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     data source predicates: l.l_shipdate > '1996-01-01'
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=24B cardinality=150.00K
|
|--05:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select * from tpch_jdbc.orders where o_orderdate between '1995-01-01' and '1996-01-01'
---- PLAN
PLAN-ROOT SINK
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   data source predicates: o_orderdate >= '1995-01-01', o_orderdate <= '1996-01-01'
   row-size=88B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
01:EXCHANGE [UNPARTITIONED]
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   data source predicates: o_orderdate >= '1995-01-01', o_orderdate <= '1996-01-01'
   row-size=88B cardinality=1.50M
====

select count(distinct c_custkey) from tpch_jdbc.customer
---- PLAN
PLAN-ROOT SINK
|
02:AGGREGATE [FINALIZE]
|  output: count(c_custkey)
|  row-size=8B cardinality=1
|
01:AGGREGATE
|  group by: c_custkey
|  row-size=8B cardinality=150.00K
|
00:SCAN DATA SOURCE [tpch_jdbc.customer]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
06:AGGREGATE [FINALIZE]
|  output: count:merge(c_custkey)
|  row-size=8B cardinality=1
|
05:EXCHANGE [UNPARTITIONED]
|
02:AGGREGATE
|  output: count(c_custkey)
|  row-size=8B cardinality=1
|
04:AGGREGATE
|  group by: c_custkey
|  row-size=8B cardinality=150.00K
|
03:EXCHANGE [HASH(c_custkey)]
|
01:AGGREGATE [STREAMING]
|  group by: c_custkey
|  row-size=8B cardinality=150.00K
|
00:SCAN DATA SOURCE [tpch_jdbc.customer]
   row-size=0B cardinality=150.00K
====
select l_returnflag, l_linestatus, sum(l_quantity),
sum(l_extendedprice) from tpch_jdbc.lineitem group by
l_returnflag, l_linestatus
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: sum(l_quantity), sum(l_extendedprice)
|  group by: l_returnflag, l_linestatus
|  row-size=56B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
03:AGGREGATE [FINALIZE]
|  output: sum:merge(l_quantity), sum:merge(l_extendedprice)
|  group by: l_returnflag, l_linestatus
|  row-size=56B cardinality=6.00M
|
02:EXCHANGE [HASH(l_returnflag,l_linestatus)]
|
01:AGGREGATE [STREAMING]
|  output: sum(l_quantity), sum(l_extendedprice)
|  group by: l_returnflag, l_linestatus
|  row-size=56B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem]
   row-size=0B cardinality=6.00M
====
select o_orderpriority, count(*) from tpch_jdbc.orders
where o_orderdate < '1995-03-15' group by o_orderpriority
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: count(*)
|  group by: o_orderpriority
|  row-size=20B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   data source predicates: o_orderdate < '1995-03-15'
   row-size=0B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
03:AGGREGATE [FINALIZE]
|  output: count:merge(*)
|  group by: o_orderpriority
|  row-size=20B cardinality=1.50M
|
02:EXCHANGE [HASH(o_orderpriority)]
|
01:AGGREGATE [STREAMING]
|  output: count(*)
|  group by: o_orderpriority
|  row-size=20B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   data source predicates: o_orderdate < '1995-03-15'
   row-size=0B cardinality=1.50M
====
select c.c_custkey, count(o.o_orderkey) from tpch_jdbc.customer
c left join tpch_jdbc.orders o on c.c_custkey=o.o_custkey
group by c.c_custkey
---- PLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: count(o.o_orderkey)
|  group by: c.c_custkey
|  row-size=16B cardinality=150.00K
|
02:HASH JOIN [LEFT OUTER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=24B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
06:AGGREGATE [FINALIZE]
|  output: count:merge(o.o_orderkey)
|  group by: c.c_custkey
|  row-size=16B cardinality=150.00K
|
05:EXCHANGE [HASH(c.c_custkey)]
|
03:AGGREGATE [STREAMING]
|  output: count(o.o_orderkey)
|  group by: c.c_custkey
|  row-size=16B cardinality=150.00K
|
02:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=24B cardinality=150.00K
|
|--04:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select c.c_custkey, o.o_orderkey, l.l_extendedprice from
tpch_jdbc.customer c join tpch_jdbc.orders o on
c.c_custkey=o.o_custkey join tpch_jdbc.lineitem l on
o.o_orderkey=l.l_orderkey where l.l_discount < 0.07
---- PLAN
PLAN-ROOT SINK
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=40B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     data source predicates: l.l_discount < 0.07
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=24B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=40B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     data source predicates: l.l_discount < 0.07
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=24B cardinality=150.00K
|
|--05:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select c.c_name, sum(o.o_totalprice), sum(l.l_extendedprice)
from tpch_jdbc.customer c join tpch_jdbc.orders
o on c.c_custkey=o.o_custkey join tpch_jdbc.lineitem
l on o.o_orderkey=l.l_orderkey group by c.c_name
---- PLAN
PLAN-ROOT SINK
|
05:AGGREGATE [FINALIZE]
|  output: sum(o.o_totalprice), sum(l.l_extendedprice)
|  group by: c.c_name
|  row-size=44B cardinality=150.00K
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=60B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=44B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
10:EXCHANGE [UNPARTITIONED]
|
09:AGGREGATE [FINALIZE]
|  output: sum:merge(o.o_totalprice), sum:merge(l.l_extendedprice)
|  group by: c.c_name
|  row-size=44B cardinality=150.00K
|
08:EXCHANGE [HASH(c.c_name)]
|
05:AGGREGATE [STREAMING]
|  output: sum(o.o_totalprice), sum(l.l_extendedprice)
|  group by: c.c_name
|  row-size=44B cardinality=150.00K
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=60B cardinality=150.00K
|
|--07:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=44B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select l.l_orderkey, avg(l.l_quantity) from
tpch_jdbc.lineitem l group by l.l_orderkey
having avg(l.l_quantity) > 20
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: avg(l.l_quantity)
|  group by: l.l_orderkey
|  having: avg(l.l_quantity) > 20
|  row-size=16B cardinality=600.12K
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
   row-size=0B cardinality=6.00M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
03:AGGREGATE [FINALIZE]
|  output: avg:merge(l.l_quantity)
|  group by: l.l_orderkey
|  having: avg(l.l_quantity) > 20
|  row-size=16B cardinality=600.12K
|
02:EXCHANGE [HASH(l.l_orderkey)]
|
01:AGGREGATE [STREAMING]
|  output: avg(l.l_quantity)
|  group by: l.l_orderkey
|  row-size=16B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
   row-size=0B cardinality=6.00M
====
select o.o_orderkey, count(l.l_partkey) from
tpch_jdbc.orders o join tpch_jdbc.lineitem l on
o.o_orderkey=l.l_orderkey group by o.o_orderkey
---- PLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: count(l.l_partkey)
|  group by: o.o_orderkey
|  row-size=16B cardinality=1.50M
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=24B cardinality=1.50M
|
|--01:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders o]
   row-size=0B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
06:AGGREGATE [FINALIZE]
|  output: count:merge(l.l_partkey)
|  group by: o.o_orderkey
|  row-size=16B cardinality=1.50M
|
05:EXCHANGE [HASH(o.o_orderkey)]
|
03:AGGREGATE [STREAMING]
|  output: count(l.l_partkey)
|  group by: o.o_orderkey
|  row-size=16B cardinality=1.50M
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=24B cardinality=1.50M
|
|--04:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders o]
   row-size=0B cardinality=1.50M
====
select n.n_name, count(c.c_custkey) from tpch_jdbc.nation n
join tpch_jdbc.customer c on n.n_nationkey=c.c_nationkey group by n.n_name
---- PLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: count(c.c_custkey)
|  group by: n.n_name
|  row-size=20B cardinality=25
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: n.n_nationkey = c.c_nationkey
|  row-size=24B cardinality=25
|
|--01:SCAN DATA SOURCE [tpch_jdbc.customer c]
|     row-size=0B cardinality=150.00K
|
00:SCAN DATA SOURCE [tpch_jdbc.nation n]
   row-size=0B cardinality=25
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
06:AGGREGATE [FINALIZE]
|  output: count:merge(c.c_custkey)
|  group by: n.n_name
|  row-size=20B cardinality=25
|
05:EXCHANGE [HASH(n.n_name)]
|
03:AGGREGATE [STREAMING]
|  output: count(c.c_custkey)
|  group by: n.n_name
|  row-size=20B cardinality=25
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: n.n_nationkey = c.c_nationkey
|  row-size=24B cardinality=25
|
|--04:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.customer c]
|     row-size=0B cardinality=150.00K
|
00:SCAN DATA SOURCE [tpch_jdbc.nation n]
   row-size=0B cardinality=25
====
select r.r_name, count(n.n_name) from tpch_jdbc.region r
join tpch_jdbc.nation n on r.r_regionkey=n.n_regionkey
group by r.r_name
---- PLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: count(n.n_name)
|  group by: r.r_name
|  row-size=20B cardinality=10
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: r.r_regionkey = n.n_regionkey
|  row-size=28B cardinality=10
|
|--01:SCAN DATA SOURCE [tpch_jdbc.nation n]
|     row-size=0B cardinality=25
|
00:SCAN DATA SOURCE [tpch_jdbc.region r]
   row-size=0B cardinality=10
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
06:AGGREGATE [FINALIZE]
|  output: count:merge(n.n_name)
|  group by: r.r_name
|  row-size=20B cardinality=10
|
05:EXCHANGE [HASH(r.r_name)]
|
03:AGGREGATE [STREAMING]
|  output: count(n.n_name)
|  group by: r.r_name
|  row-size=20B cardinality=10
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: r.r_regionkey = n.n_regionkey
|  row-size=28B cardinality=10
|
|--04:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.nation n]
|     row-size=0B cardinality=25
|
00:SCAN DATA SOURCE [tpch_jdbc.region r]
   row-size=0B cardinality=10
====
select c.c_name, o.o_orderdate, l.l_shipdate from
tpch_jdbc.customer c join tpch_jdbc.orders o on
c.c_custkey=o.o_custkey join tpch_jdbc.lineitem l
on o.o_orderkey=l.l_orderkey where o.o_orderdate > '1993-01-01'
---- PLAN
PLAN-ROOT SINK
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=68B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=48B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     data source predicates: o.o_orderdate > '1993-01-01'
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=68B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=48B cardinality=150.00K
|
|--05:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     data source predicates: o.o_orderdate > '1993-01-01'
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select c.c_name, count(o.o_orderkey), sum(o.o_totalprice) from
tpch_jdbc.customer c join tpch_jdbc.orders o on
c.c_custkey=o.o_custkey group by c.c_name
---- PLAN
PLAN-ROOT SINK
|
03:AGGREGATE [FINALIZE]
|  output: count(o.o_orderkey), sum(o.o_totalprice)
|  group by: c.c_name
|  row-size=36B cardinality=150.00K
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=44B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
06:AGGREGATE [FINALIZE]
|  output: count:merge(o.o_orderkey), sum:merge(o.o_totalprice)
|  group by: c.c_name
|  row-size=36B cardinality=150.00K
|
05:EXCHANGE [HASH(c.c_name)]
|
03:AGGREGATE [STREAMING]
|  output: count(o.o_orderkey), sum(o.o_totalprice)
|  group by: c.c_name
|  row-size=36B cardinality=150.00K
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=44B cardinality=150.00K
|
|--04:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select o_orderstatus, avg(o_totalprice) from tpch_jdbc.orders
group by o_orderstatus
---- PLAN
PLAN-ROOT SINK
|
01:AGGREGATE [FINALIZE]
|  output: avg(o_totalprice)
|  group by: o_orderstatus
|  row-size=20B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   row-size=0B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
04:EXCHANGE [UNPARTITIONED]
|
03:AGGREGATE [FINALIZE]
|  output: avg:merge(o_totalprice)
|  group by: o_orderstatus
|  row-size=20B cardinality=1.50M
|
02:EXCHANGE [HASH(o_orderstatus)]
|
01:AGGREGATE [STREAMING]
|  output: avg(o_totalprice)
|  group by: o_orderstatus
|  row-size=20B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.orders]
   row-size=0B cardinality=1.50M
====
select c.c_name, o.o_orderstatus, l.l_returnflag from
tpch_jdbc.customer c join tpch_jdbc.orders o on
c.c_custkey=o.o_custkey join tpch_jdbc.lineitem l
on o.o_orderkey=l.l_orderkey
---- PLAN
PLAN-ROOT SINK
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=68B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=48B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=68B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=48B cardinality=150.00K
|
|--05:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select c.c_custkey, o.o_orderpriority, l.l_quantity from
tpch_jdbc.customer c join tpch_jdbc.orders o on
c.c_custkey=o.o_custkey join tpch_jdbc.lineitem l on
o.o_orderkey=l.l_orderkey where l.l_shipdate < l.l_commitdate
---- PLAN
PLAN-ROOT SINK
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=76B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     predicates: l.l_shipdate < l.l_commitdate
|     row-size=0B cardinality=600.12K
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=36B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
07:EXCHANGE [UNPARTITIONED]
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=76B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     predicates: l.l_shipdate < l.l_commitdate
|     row-size=0B cardinality=600.12K
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=36B cardinality=150.00K
|
|--05:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select c.c_name, sum(l.l_discount) from tpch_jdbc.customer c join
tpch_jdbc.orders o on c.c_custkey=o.o_custkey join tpch_jdbc.lineitem
l on o.o_orderkey=l.l_orderkey group by c.c_name
---- PLAN
PLAN-ROOT SINK
|
05:AGGREGATE [FINALIZE]
|  output: sum(l.l_discount)
|  group by: c.c_name
|  row-size=28B cardinality=150.00K
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=52B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=36B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
10:EXCHANGE [UNPARTITIONED]
|
09:AGGREGATE [FINALIZE]
|  output: sum:merge(l.l_discount)
|  group by: c.c_name
|  row-size=28B cardinality=150.00K
|
08:EXCHANGE [HASH(c.c_name)]
|
05:AGGREGATE [STREAMING]
|  output: sum(l.l_discount)
|  group by: c.c_name
|  row-size=28B cardinality=150.00K
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_orderkey = l.l_orderkey
|  row-size=52B cardinality=150.00K
|
|--07:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.lineitem l]
|     row-size=0B cardinality=6.00M
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=36B cardinality=150.00K
|
|--06:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
select c.c_name, count(distinct o.o_orderkey) from tpch_jdbc.customer
c join tpch_jdbc.orders o on c.c_custkey=o.o_custkey group by c.c_name
---- PLAN
PLAN-ROOT SINK
|
04:AGGREGATE [FINALIZE]
|  output: count(o.o_orderkey)
|  group by: c.c_name
|  row-size=20B cardinality=150.00K
|
03:AGGREGATE
|  group by: c.c_name, o.o_orderkey
|  row-size=20B cardinality=150.00K
|
02:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=36B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
10:EXCHANGE [UNPARTITIONED]
|
09:AGGREGATE [FINALIZE]
|  output: count:merge(o.o_orderkey)
|  group by: c.c_name
|  row-size=20B cardinality=150.00K
|
08:EXCHANGE [HASH(c.c_name)]
|
04:AGGREGATE [STREAMING]
|  output: count(o.o_orderkey)
|  group by: c.c_name
|  row-size=20B cardinality=150.00K
|
07:AGGREGATE
|  group by: c.c_name, o.o_orderkey
|  row-size=20B cardinality=150.00K
|
06:EXCHANGE [HASH(c.c_name,o.o_orderkey)]
|
03:AGGREGATE [STREAMING]
|  group by: c.c_name, o.o_orderkey
|  row-size=20B cardinality=150.00K
|
02:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_custkey = o.o_custkey
|  row-size=36B cardinality=150.00K
|
|--05:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders o]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer c]
   row-size=0B cardinality=150.00K
====
SELECT a.c_custkey
FROM tpch_jdbc.customer a
LEFT JOIN tpch_jdbc.orders b ON a.c_custkey = b.o_custkey
LEFT JOIN tpch_jdbc.orders c ON b.o_custkey = c.o_custkey
LEFT JOIN tpch_jdbc.customer d ON c.o_custkey = d.c_custkey
LEFT JOIN tpch_jdbc.orders e ON d.c_custkey = e.o_custkey
LEFT JOIN tpch_jdbc.customer f ON e.o_custkey = f.c_custkey
ORDER BY a.c_custkey;
---- PLAN
PLAN-ROOT SINK
|
11:SORT
|  order by: c_custkey ASC
|  row-size=8B cardinality=150.00K
|
10:HASH JOIN [LEFT OUTER JOIN]
|  hash predicates: e.o_custkey = f.c_custkey
|  row-size=48B cardinality=150.00K
|
|--05:SCAN DATA SOURCE [tpch_jdbc.customer f]
|     row-size=0B cardinality=150.00K
|
09:HASH JOIN [LEFT OUTER JOIN]
|  hash predicates: d.c_custkey = e.o_custkey
|  row-size=40B cardinality=150.00K
|
|--04:SCAN DATA SOURCE [tpch_jdbc.orders e]
|     row-size=0B cardinality=1.50M
|
08:HASH JOIN [LEFT OUTER JOIN]
|  hash predicates: c.o_custkey = d.c_custkey
|  row-size=32B cardinality=150.00K
|
|--03:SCAN DATA SOURCE [tpch_jdbc.customer d]
|     row-size=0B cardinality=150.00K
|
07:HASH JOIN [LEFT OUTER JOIN]
|  hash predicates: b.o_custkey = c.o_custkey
|  row-size=24B cardinality=150.00K
|
|--02:SCAN DATA SOURCE [tpch_jdbc.orders c]
|     row-size=0B cardinality=1.50M
|
06:HASH JOIN [LEFT OUTER JOIN]
|  hash predicates: a.c_custkey = b.o_custkey
|  row-size=16B cardinality=150.00K
|
|--01:SCAN DATA SOURCE [tpch_jdbc.orders b]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer a]
   row-size=0B cardinality=150.00K
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
17:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: c_custkey ASC
|
11:SORT
|  order by: c_custkey ASC
|  row-size=8B cardinality=150.00K
|
10:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
|  hash predicates: e.o_custkey = f.c_custkey
|  row-size=48B cardinality=150.00K
|
|--16:EXCHANGE [BROADCAST]
|  |
|  05:SCAN DATA SOURCE [tpch_jdbc.customer f]
|     row-size=0B cardinality=150.00K
|
09:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
|  hash predicates: d.c_custkey = e.o_custkey
|  row-size=40B cardinality=150.00K
|
|--15:EXCHANGE [BROADCAST]
|  |
|  04:SCAN DATA SOURCE [tpch_jdbc.orders e]
|     row-size=0B cardinality=1.50M
|
08:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
|  hash predicates: c.o_custkey = d.c_custkey
|  row-size=32B cardinality=150.00K
|
|--14:EXCHANGE [BROADCAST]
|  |
|  03:SCAN DATA SOURCE [tpch_jdbc.customer d]
|     row-size=0B cardinality=150.00K
|
07:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
|  hash predicates: b.o_custkey = c.o_custkey
|  row-size=24B cardinality=150.00K
|
|--13:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.orders c]
|     row-size=0B cardinality=1.50M
|
06:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
|  hash predicates: a.c_custkey = b.o_custkey
|  row-size=16B cardinality=150.00K
|
|--12:EXCHANGE [BROADCAST]
|  |
|  01:SCAN DATA SOURCE [tpch_jdbc.orders b]
|     row-size=0B cardinality=1.50M
|
00:SCAN DATA SOURCE [tpch_jdbc.customer a]
   row-size=0B cardinality=150.00K
====
WITH recent_orders AS (
  SELECT o.o_orderkey, o.o_custkey, o.o_totalprice, o.o_orderdate
  FROM tpch_jdbc.orders o WHERE o.o_orderdate >= '1995-01-01'
)
SELECT c.c_custkey, c.c_name, c.c_mktsegment,
       COUNT(ro.o_orderkey) AS num_orders,
       SUM(ro.o_totalprice) AS total_spent,
       AVG(ro.o_totalprice) AS avg_order_value,
       RANK() OVER (ORDER BY SUM(ro.o_totalprice) DESC) AS spend_rank,
       CASE
         WHEN SUM(ro.o_totalprice) > 500000 THEN 'VIP'
         WHEN SUM(ro.o_totalprice) > 100000 THEN 'Premium'
         ELSE 'Regular'
       END AS customer_tier,
       s.s_name AS supplier_name,
       s.s_acctbal AS supplier_balance
FROM tpch_jdbc.customer c
JOIN recent_orders ro
     ON c.c_custkey = ro.o_custkey
JOIN tpch_jdbc.supplier s
     ON c.c_nationkey = s.s_nationkey
GROUP BY c.c_custkey, c.c_name, c.c_mktsegment, s.s_name, s.s_acctbal
ORDER BY total_spent DESC
LIMIT 5;
---- PLAN
PLAN-ROOT SINK
|
08:TOP-N [LIMIT=5]
|  order by: sum(ro.o_totalprice) DESC
|  row-size=92B cardinality=5
|
07:ANALYTIC
|  functions: rank()
|  order by: sum(ro.o_totalprice) DESC
|  window: RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
|  row-size=92B cardinality=1.50M
|
06:SORT
|  order by: sum(ro.o_totalprice) DESC
|  row-size=84B cardinality=1.50M
|
05:AGGREGATE [FINALIZE]
|  output: count(o.o_orderkey), sum(o.o_totalprice), avg(o.o_totalprice)
|  group by: c.c_custkey, c.c_name, c.c_mktsegment, s.s_name, s.s_acctbal
|  row-size=84B cardinality=1.50M
|
04:HASH JOIN [INNER JOIN]
|  hash predicates: c.c_nationkey = s.s_nationkey
|  row-size=80B cardinality=1.50M
|
|--02:SCAN DATA SOURCE [tpch_jdbc.supplier s]
|     row-size=0B cardinality=10.00K
|
03:HASH JOIN [INNER JOIN]
|  hash predicates: o.o_custkey = c.c_custkey
|  row-size=58B cardinality=1.50M
|
|--00:SCAN DATA SOURCE [tpch_jdbc.customer c]
|     row-size=0B cardinality=150.00K
|
01:SCAN DATA SOURCE [tpch_jdbc.orders o]
   data source predicates: o.o_orderdate >= '1995-01-01'
   row-size=24B cardinality=1.50M
---- DISTRIBUTEDPLAN
PLAN-ROOT SINK
|
08:TOP-N [LIMIT=5]
|  order by: sum(ro.o_totalprice) DESC
|  row-size=92B cardinality=5
|
07:ANALYTIC
|  functions: rank()
|  order by: sum(ro.o_totalprice) DESC
|  window: RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
|  row-size=92B cardinality=1.50M
|
13:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: sum(ro.o_totalprice) DESC
|
06:SORT
|  order by: sum(ro.o_totalprice) DESC
|  row-size=84B cardinality=1.50M
|
12:AGGREGATE [FINALIZE]
|  output: count:merge(ro.o_orderkey), sum:merge(ro.o_totalprice), avg:merge(ro.o_totalprice)
|  group by: c.c_custkey, c.c_name, c.c_mktsegment, s.s_name, s.s_acctbal
|  row-size=84B cardinality=1.50M
|
11:EXCHANGE [HASH(c.c_custkey,c.c_name,c.c_mktsegment,s.s_name,s.s_acctbal)]
|
05:AGGREGATE [STREAMING]
|  output: count(o.o_orderkey), sum(o.o_totalprice), avg(o.o_totalprice)
|  group by: c.c_custkey, c.c_name, c.c_mktsegment, s.s_name, s.s_acctbal
|  row-size=84B cardinality=1.50M
|
04:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: c.c_nationkey = s.s_nationkey
|  row-size=80B cardinality=1.50M
|
|--10:EXCHANGE [BROADCAST]
|  |
|  02:SCAN DATA SOURCE [tpch_jdbc.supplier s]
|     row-size=0B cardinality=10.00K
|
03:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: o.o_custkey = c.c_custkey
|  row-size=58B cardinality=1.50M
|
|--09:EXCHANGE [BROADCAST]
|  |
|  00:SCAN DATA SOURCE [tpch_jdbc.customer c]
|     row-size=0B cardinality=150.00K
|
01:SCAN DATA SOURCE [tpch_jdbc.orders o]
   data source predicates: o.o_orderdate >= '1995-01-01'
   row-size=24B cardinality=1.50M
====