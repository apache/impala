<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="fault_tolerance">

  <title>Impala Fault Tolerance</title>

  <titlealts audience="PDF">

    <navtitle>Fault Tolerance</navtitle>

  </titlealts>

  <prolog>
    <metadata>
      <data name="Category" value="Fault Tolerance"/>
      <data name="Category" value="Impala"/>
      <data name="Category" value="Developers"/>
      <data name="Category" value="Administrators"/>
    </metadata>
  </prolog>

  <conbody>

    <p>
      This section describes the fault tolerance mechanisms built into
      Impala. Fault tolerance allows Impala to continue to operate in the
      face of hardware or process faults.
    </p>

    <p>
      Impala uses the statestored process to provide cluster membership for
      an Impala cluster. This is one of the core ways Impala provides fault
      tolerance. The statestore periodically sends heartbeats (RPCs) to each
      impalad process. If an impalad stops responding to heartbeats, the
      statestored will consider the impalad as failed, and it will remove it
      from the cluster membership state. The updates to the cluster
      membership will be broadcasted to all impalads.
    </p>

  </conbody>

</concept>
