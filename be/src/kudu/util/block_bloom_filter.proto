// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
syntax = "proto2";
package kudu;

option java_package = "org.apache.kudu";

import "kudu/util/hash.proto";
import "kudu/util/pb_util.proto";

message BlockBloomFilterPB {
  // Log2 of the space required for the BlockBloomFilter.
  optional int32 log_space_bytes = 1;
  // The bloom filter bitmap.
  optional bytes bloom_data = 2 [(kudu.REDACT) = true];
  // Whether the BlockBloomFilter is empty and hence always returns false for lookups.
  optional bool always_false = 3;
  // Hash algorithm to generate 32-bit unsigned integer hash values before inserting
  // in the BlockBloomFilter.
  optional HashAlgorithm hash_algorithm = 4 [default = FAST_HASH];
  // Seed used to hash the input values in the hash algorithm.
  optional uint32 hash_seed = 5 [default = 0];
}
