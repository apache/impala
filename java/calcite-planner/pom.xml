<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>org.apache.impala</groupId>
    <artifactId>impala-parent</artifactId>
    <version>5.0.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>calcite-planner</artifactId>
  <packaging>jar</packaging>

  <name>calcite-planner</name>

  <dependencies>
    <dependency>
      <groupId>org.apache.impala</groupId>
      <artifactId>impala-frontend</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.calcite</groupId>
      <artifactId>calcite-core</artifactId>
      <version>1.37.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.calcite.avatica</groupId>
      <artifactId>avatica-core</artifactId>
      <version>1.23.0</version>
    </dependency>
     <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <version>2.10.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.impala</groupId>
      <artifactId>impala-frontend</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
  </dependencies>

 <build>
     <resources>
       <resource>
         <directory>${env.IMPALA_HOME}/fe/src/test/resources</directory>
       </resource>
     </resources>
     <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <excludeTypes>pom</excludeTypes>
              <includeScope>runtime</includeScope>
              <silent>true</silent>
            </configuration>
          </execution>
          <!--
            Write the runtime classpath to a file in the target directory
            so it can be picked up by bin/set-classpath.sh
          -->
          <execution>
            <id>write-classpath</id>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <outputFile>${project.build.directory}/calcite-build-classpath.txt</outputFile>
              <includeScope>runtime</includeScope>
              <excludeTypes>pom</excludeTypes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution> <!-- copy all templates/data in the same location to compile them at once -->
            <id>copy-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/codegen</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/codegen</directory>
                  <filtering>false</filtering>
                 </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.googlecode.fmpp-maven-plugin</groupId>
        <artifactId>fmpp-maven-plugin</artifactId>
        <version>1.0</version>
        <dependencies>
          <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.32</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>generate-fmpp-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <cfgFile>${project.build.directory}/codegen/config.fmpp</cfgFile>
              <outputDirectory>target/generated-sources</outputDirectory>
              <templateDirectory>${project.build.directory}/codegen/templates</templateDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- This must be run AFTER the fmpp-maven-plugin -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <id>javacc</id>
            <goals>
              <goal>javacc</goal>
            </goals>
            <configuration>
              <sourceDirectory>${project.build.directory}/generated-sources/</sourceDirectory>
              <includes>
                <include>**/Parser.jj</include>
              </includes>
              <!-- This must be kept synced with Apache Calcite. -->
              <lookAhead>1</lookAhead>
              <isStatic>false</isStatic>
              <outputDirectory>${project.build.directory}/generated-sources/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <reportsDirectory>${surefire.reports.dir}</reportsDirectory>
          <groups>${testcase.groups}</groups>
          <environmentVariables>
            <!-- Set LD_LIBRARY_PATH and LD_PRELOAD to pick up libraries required for
                 running fe tests:
                 * LD_LIBRARY_PATH needs to include the GCC libraries that libfesupport.so
                   was built against.
                 * LD_PRELOAD needs to include libjsig.so for JVM/native signal handling.
            -->
            <LD_LIBRARY_PATH>
              ${env.IMPALA_TOOLCHAIN_PACKAGES_HOME}/gcc-${env.IMPALA_GCC_VERSION}/lib64:${env.IMPALA_HOME}/be/build/latest/service
            </LD_LIBRARY_PATH>
            <LD_PRELOAD>
              ${env.LIB_JSIG}
            </LD_PRELOAD>
            <USE_CALCITE_PLANNER>true</USE_CALCITE_PLANNER>
          </environmentVariables>
          <!-- These tests need to find core-site.xml but don't natually know about
               fe/src/test/resources, so add it. -->
          <additionalClasspathElements>
            <additionalClasspathElement>${env.IMPALA_HOME}/fe/src/test/resources</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
